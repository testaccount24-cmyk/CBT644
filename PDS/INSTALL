//SBGOLOBA JOB 'INIT',MSGLEVEL=(0,0),MSGCLASS=X,REGION=2048K,CLASS=A
//* START JCL
//INIT    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=X
//*
//* THIS STEP CREATES THE FUSION CONTROL LIBRARY WHICH RESOLVES
//* LIBRARY DEFINITIONS.  IF YOU MODIFY THE SYSUT2 DEFINITIONS OF
//* THESE LIBDEFS, THEN YOU MUST MODIFY THESE NAMES TO RESOLVE THE NEW
//* DSN'S.  YOU CAN MODIFY THEM HERE OR LATER WHEN THE CNTL LIBRARY
//* HAS BEEN CREATED.
//*
//* IF YOU MODIFY THE FOLLOWING SYSUT2 DSN TO ANOTHER NAME THEN YOU
//* MUST ALSO MODIFY THE REGDSN NAME IN THE MAIN FUSION EXEC.
//*
//*SYSUT2   DD DSN=WRK1.FUSION.CNTL,DISP=(NEW,CATLG,DELETE),
//SYSUT2   DD DSN=SBGOLOB.FUSION.CNTL,DISP=(NEW,CATLG,DELETE),
//         DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,DSORG=PO),
//         SPACE=(CYL,(1,1,1)),UNIT=SYSALLDA,VOL=SER=DATA01
//SYSIN    DD DATA
./ ADD NAME=FUSNCONF,LIST=ALL
 /*ISPMLIB = 'WRK1.PACK.FUSION.ISPMLIB'*/
 /*ISPPLIB = 'WRK1.PACK.FUSION.PLIB' */
 /*ISPSLIB = 'WRK1.PACK.FUSION.SKELS'*/
ISPMLIB = 'SBGOLOB.FUSION.ISPMLIB'
ISPPLIB = 'SBGOLOB.FUSION.PLIB'
ISPSLIB = 'SBGOLOB.FUSION.SKELS'
./ ENDUP
/*
//SBGOLOBA JOB 'INIT',MSGLEVEL=(0,0),MSGCLASS=X,REGION=2048K,CLASS=A
//* START JCL
//INIT    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=X
//*
//* THIS STEP INSTALLS THE FUSION EXEC INTO THE PDS SPECIFIED BY THE
//* SYSUT2 DSN.  YOU SHOULD MODIFY THE NAME TO THE ONE USED FOR
//* SYSEXEC'S IN YOUR ENVIRONMENT.
//*
//*SYSUT2   DD DSN=WRK1.FUSION.SYSEXEC,DISP=(NEW,CATLG,DELETE),
//SYSUT2   DD DSN=SBGOLOB.FUSION.SYSEXEC,DISP=(NEW,CATLG,DELETE),
//         DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,DSORG=PO),
//         SPACE=(CYL,(1,1,1)),UNIT=SYSALLDA,VOL=SER=DATA01
//SYSIN    DD DATA
./ ADD NAME=FUSION,LIST=ALL
 /*REXX*/
CALL FUSIONSTART
RETURN

FUSIONSTART: PROCEDURE
STATUS = MSG('OFF')
"FREE DD (OUTDD, NEWDD, OLDDD, DELDD)"
PROCLIST = 'DISPLAY COMPAREA COMPAREB PCOMPAREA DELCOM'
REGDSN = 'WRK1.FUSION.CNTL'
CALL CONFIGURATION
TIBAPPX = ''
TIBAPPY = ''
ZTITLE = 'FUSION USER SELECT SCREEN'
CURPOS = 'PROGNAME'
USER = USERID()
TIBPROG = ''
ENDKEY = 0
RC = 0
SP = '                                                               '
MSGPOS = ''
PCOMPAREA = 0
"ISPEXEC LIBDEF ISPMLIB DATASET ID('"ISPMLIB"') STACK"
"ISPEXEC LIBDEF ISPPLIB DATASET ID('"ISPPLIB"') STACK"
"ISPEXEC LIBDEF ISPSLIB DATASET ID('"ISPSLIB"') STACK"
"ISPEXEC VGET (PROCOPT) profile"
"ISPEXEC VGET (BASEDSN) profile"
"ISPEXEC VGET (TIBDSN) profile"
"ISPEXEC VGET (DESTDSN) profile"
"ISPEXEC VGET (APPFUNC) profile"
IF pos(appfunc, 'MIGRATE MOVE MANSEL MASSMIG') = 0 THEN
   APPFUNC = 'MIGRATE'
CALL FLEX_SCREEN
CALL PANEL_CONTROL
DO WHILE \ ENDKEY
   ZEDLMSG = ''
   GLOBAL_ERROR = ' '
   CALL VERIFY
   CALL LANGUAGE_TYPE
   IF GLOBAL_ERROR = '' & \ ENDKEY THEN do
      IF APPFUNC = 'MANSEL' THEN DO
         CALL MANUAL_SELECT
         HOLDTIB = TIBDSN
         TIBDSN = ""USER".TEMP80"
         HOLDPROG = TIBPROG
         TIBPROG = 'TEMPFILE'
         "FREE DD(NEWDD)"
         "ALLOCATE DD(NEWDD) DSN('"TIBDSN"("TIBPROG")') SHR"
         END
      CALL INITIATEC
      CALL ALERT FUSIO013
      IF POS('DISPLAY', PROCOPT) > 0 THEN DO
         "ISPEXEC CONTROL DISPLAY SAVE"
         "ISPEXEC EDIT DATASET,
         ('"DESTDSN"("DESTPROG")')"
         "ISPEXEC CONTROL DISPLAY RESTORE"
         END
      IF POS('COMPAREA', PROCOPT) > 0 THEN DO
         CALL ALERT FUSIO014
         CALL COMPAREA
         IF POS('PCOMPAREA', PROCOPT) > 0 THEN
            CALL PRINTCOMP
         END
      IF POS('COMPAREB', PROCOPT) > 0 THEN DO
         CALL ALERT FUSIO016
         CALL COMPAREB
         END
      IF POS('COMPAREA', PROCOPT) > 0 THEN DO
         "ISPEXEC CONTROL DISPLAY SAVE"
         "ISPEXEC BROWSE DATASET ('"USER".SUPERC.LISTA')"
         "ISPEXEC CONTROL DISPLAY RESTORE"
         END
      IF POS('COMPAREB', PROCOPT) > 0 THEN DO
         "ISPEXEC CONTROL DISPLAY SAVE"
         "ISPEXEC BROWSE DATASET,
         ('"USER".SUPERC.LISTB')"
         "ISPEXEC CONTROL DISPLAY RESTORE"
         END
      END
   "FREE DD (REPDD, NEWDD, OLDDD, OUTDD, DELDD)"
   IF APPFUNC = 'MANSEL' THEN DO
      TIBDSN = HOLDTIB
      TIBPROG = HOLDPROG
      END
   CALL PANEL_CONTROLA
   END
"ISPEXEC VPUT (PROCOPT) profile"
"ISPEXEC VPUT (BASEDSN) profile"
"ISPEXEC VPUT (TIBDSN) profile"
"ISPEXEC VPUT (DESTDSN) profile"
"ISPEXEC VPUT (APPFUNC) profile"
"ISPEXEC LIBDEF ISPMLIB"
"ISPEXEC LIBDEF ISPPLIB"
"ISPEXEC LIBDEF ISPSLIB"
RETURN

FLEX_SCREEN:
"ISPEXEC TBCREATE EZLIST NAMES(TFUNC) NOWRITE"
TFUNC = '                  FUSION - Module Version Integration System'
"ISPEXEC TBADD EZLIST"
TFUNC = ' '
"ISPEXEC TBADD EZLIST"
TFUNC = 'Quick Help - Use PF7 and PF8 to navigate.'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o BASE DSN - Dataset that has production source.'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o UPDATED DSN - Dataset that has updated source such as'
"ISPEXEC TBADD EZLIST"
TFUNC = '   vendor fixes or programmer test code.'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o DESTINATION DSN - Dataset that will contain the FUSION'
"ISPEXEC TBADD EZLIST"
TFUNC = '   program merges.'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o MODULE NAME - Name of the module to be updated.  If the'
"ISPEXEC TBADD EZLIST"
TFUNC = '   BASE module name is different from the UPDATED module name,'
"ISPEXEC TBADD EZLIST"
TFUNC = '   enter the BASE name followed by the TIB name.  The '
"ISPEXEC TBADD EZLIST"
TFUNC = '   DESTINATION name will be the BASE name. '
"ISPEXEC TBADD EZLIST"
TFUNC = ' o APPLICATION FUNCTION - Valid functions include '
"ISPEXEC TBADD EZLIST"
TFUNC = '     MANSEL - Allows manual selection of lines to migrate.'
"ISPEXEC TBADD EZLIST"
TFUNC = '     MASSMIG - Moves company modified code to base code.'
"ISPEXEC TBADD EZLIST"
TFUNC = '     MIGRATE - Moves user selected code to base code.'
"ISPEXEC TBADD EZLIST"
TFUNC = '     MOVE - Moves user selected code to base without ',
        'performing associated deletes.'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o PROCESS OPTIONS - Valid functions include '
"ISPEXEC TBADD EZLIST"
TFUNC =  '     DISPLAY, COMPAREA, COMPAREAB, PCOMPAREA, and DELCOM'
"ISPEXEC TBADD EZLIST"
TFUNC = ' o Enter one or more SI numbers to be migrated on the '
"ISPEXEC TBADD EZLIST"
TFUNC = '   2 available free format entry lines.'
"ISPEXEC TBADD EZLIST"
"ISPEXEC TBTOP EZLIST"
RETURN

MANUAL_SELECT:
DROP TIBFILE.
DROP OUT80.
LOWVALUE = ' '
"ALLOCATE DD(MANSCAN) DSN('"TIBDSN"("TIBPROG")') SHR"
"ALLOCATE DD(ALLOCDD) DSN('"USER".TEMP82') SPACE (9 9) CYLINDERS,
   DSORG(PO) DIR(5) LRECL(82) BLKSIZE(3280) RECFM(F,B) MOD REUSE"
  "FREE DD(ALLOCDD)"
"ALLOCATE DD(ALLOCDD) DSN('"USER".TEMP80') SPACE (5 5) CYLINDERS,
   DSORG(PO) DIR(5) LRECL(80) BLKSIZE(3200) RECFM(F,B) MOD REUSE"
  "FREE DD(ALLOCDD)"
"ALLOCATE DD(OUTSCAN) DSN('"USER".TEMP82(TEMPFILE)') SHR"
"EXECIO * DISKR MANSCAN (STEM TIBFILE. FINIS"
DO MM = 1 TO TIBFILE.0
   OUTFILE.MM = ' ' || LOWVALUE || TIBFILE.MM
   END
"EXECIO * DISKW OUTSCAN (STEM OUTFILE. FINIS"
"ISPEXEC CONTROL DISPLAY SAVE"
ZSHADOW = '$$$$$$$$$$$$$$$$  '
"ISPEXEC EDIT DATASET,
   ('"USER".TEMP82(TEMPFILE)')"
"ISPEXEC CONTROL DISPLAY RESTORE"
DROP OUTFILE.
"EXECIO * DISKR OUTSCAN (STEM OUTFILE. FINIS"
"FREE DD(OUTSCAN)"
"ALLOCATE DD(OUTSCAN) DSN('"USER".TEMP80(TEMPFILE)') SHR"
DO MM = 1 TO TIBFILE.0
   OUTLINE = SUBSTR(OUTFILE.MM,3,72)
   IF SUBSTR(OUTFILE.MM,1,1) = 'S' THEN
      OUTLINE = OVERLAY('EZSEL   ',OUTLINE,73,8)
   OUT80.MM = OUTLINE
   END
"EXECIO * DISKW OUTSCAN (STEM OUT80. FINIS"
"FREE DD(OUTSCAN)"
"FREE DD(MANSCAN)"
RETURN

VERIFY:
IF WORDS(PROGNAME) = 1 THEN DO
   BASEPROG = PROGNAME
   TIBPROG = PROGNAME
   DESTPROG = PROGNAME
   END
ELSE
   IF WORDS(PROGNAME) = 2 THEN DO
      BASEPROG = WORD(PROGNAME,1)
      TIBPROG = WORD(PROGNAME,2)
      DESTPROG = BASEPROG
      END
   ELSE
      IF WORDS(PROGNAME) = 3 THEN DO
         BASEPROG = WORD(PROGNAME,1)
         TIBPROG = WORD(PROGNAME,2)
         DESTPROG = WORD(PROGNAME,3)
         END
TIBLINE = TIBAPPX || ' ' || TIBAPPY
MAXSI = WORDS(TIBLINE)
IF XRC = 8,
& GLOBAL_ERROR = ' ' THEN DO
   ENDKEY = 1
   RETURN
   END
DO SI = 1 TO MAXSI
   IF LENGTH(WORD(TIBLINE,SI)) > 6 THEN DO
     "ISPEXEC SETMSG MSG(FUSIO009)"
      GLOBAL_ERROR = 'A'
      LEAVE
      END
   END
IF SYSDSN("'"BASEDSN"'") <> "OK" THEN DO
   "ISPEXEC SETMSG MSG(FUSIO002)"
   GLOBAL_ERROR = 'A'
   END
ELSE
   IF SYSDSN("'"TIBDSN"'") <> "OK" THEN DO
      "ISPEXEC SETMSG MSG(FUSIO003)"
      GLOBAL_ERROR = 'A'
      END
   ELSE
      IF SYSDSN("'"DESTDSN"'") <> "OK" THEN DO
        "ISPEXEC SETMSG MSG(FUSIO004)"
         GLOBAL_ERROR = 'A'
         END

IF GLOBAL_ERROR = ' ' THEN DO
   IF TIBPROG <> '' THEN DO
      CHECK_MOD = ""BASEDSN"("BASEPROG")"
      IF SYSDSN("'"CHECK_MOD"'") <> "OK" THEN DO
        "ISPEXEC SETMSG MSG(FUSIO005)"
         GLOBAL_ERROR = 'A'
         END
      ELSE NOP
      CHECK_MOD = ""TIBDSN"("TIBPROG")"
      IF SYSDSN("'"CHECK_MOD"'") <> "OK" THEN DO
        "ISPEXEC SETMSG MSG(FUSIO006)"
         GLOBAL_ERROR = 'A'
         END
      ELSE NOP
      END
   ELSE DO
      "ISPEXEC SETMSG MSG(FUSIO007)"
      GLOBAL_ERROR = 'A'
      END
   END

IF APPFUNC \ = '' THEN
   IF POS(APPFUNC, 'MASSMIG MIGRATE MOVE MANSEL') = 0 THEN DO
      "ISPEXEC SETMSG MSG(FUSIO028)"
      GLOBAL_ERROR = 'A'
      END

IF PROCOPT \ = '' THEN
   DO KK = 1 TO WORDS(PROCOPT)
      IF POS(WORD(PROCOPT,KK), PROCLIST) = 0 THEN DO
         "ISPEXEC SETMSG MSG(FUSIO029)"
         GLOBAL_ERROR = 'A'
         END
      END

IF GLOBAL_ERROR = ' ' THEN DO
   "ALLOCATE DD(REPDD) DSN('"DESTDSN"("DESTPROG")') SHR"
   "ALLOCATE DD(NEWDD) DSN('"TIBDSN"("TIBPROG")') SHR"
   "ALLOCATE DD(OLDDD) DSN('"BASEDSN"("BASEPROG")') SHR"
   END
RETURN

INITIATEC:
ACTIVE_REPLACE = 0
ACTIVE = 'ACTIVE'
CHGFILE. = ''
OUTFILE. = ''
DROP OUTREC.
CALL ALERT FUSIO021
CALL COMPAREI
CALL ALERT FUSIO022
"EXECIO * DISKR DELDD (STEM CHGFILE. FINIS"
CNT = CHGFILE.0
DO SI = 1 TO MAXSI
   SINUM.SI = WORD(TIBLINE,SI)
   END
CALL ALERT FUSIO023
OUTCOUNT = 1
SPACES = '                                                            '
DO II = 3 TO CNT
   CHGFILE = CHGFILE.II
   HIT_FIND = ''
   IF substr(CHGFILE,1,1) = '*',
   & pos('N-REF#', chgfile) > 0 then do
      select
         when substr(chgfile,2,4) = 'D-RF' then DO
            ffunction = 'DELETE'
            END
         when substr(chgfile,2,4) = 'I-  ' then do
            ffunction = 'INSERT'
            active_replace = 0
            end
         when substr(chgfile,2,4) = 'I-RP' then DO
            ffunction = 'INSERT-REPLACE'
            IP = 1
            j1 = 1
            active_replace = 0
            END
         when substr(chgfile,2,4) = 'M-  ' then
            ffunction = 'MERGE'
         when substr(chgfile,2,4) = 'D-  ' then
            ffunction = 'DELETE'
         when substr(chgfile,2,4) = 'D-RP' then DO
            if active_replace then
               ffunction = 'DELETE-REPLACE'
            else
               ffunction = 'DELETE'
            IP = 1
            j1 = 1
            END
         otherwise ffunction = 'NONE'
         end
      end
   else DO
      select
         when ffunction = 'INSERT' THEN
            IF APPFUNC = 'MANSEL' THEN
               IF SINUMP(SUBSTR(CHGFILE,1,77)) THEN DO
                  OUTREC.OUTCOUNT = SUBSTR(CHGFILE,1,72)
                  outcount = outcount + 1
                  end
               else nop
            ELSE
               IF SINUMP(SUBSTR(CHGFILE,1,72)) THEN do
                  OUTREC.OUTCOUNT = SUBSTR(CHGFILE,1,72)
                  outcount = outcount + 1
                  end
         when ffunction = 'INSERT-REPLACE' THEN do
            IF APPFUNC = 'MANSEL' THEN
               IF SINUMP(SUBSTR(CHGFILE,1,77)) THEN DO
                  ACTIVE_REPLACE = 1
                  OUTREC.OUTCOUNT.IP.ACTIVE = '1'
                  END
               ELSE
                  OUTREC.OUTCOUNT.IP.ACTIVE = '0'
            ELSE
               IF SINUMP(SUBSTR(CHGFILE,1,72)) THEN DO
                  ACTIVE_REPLACE = 1
                  OUTREC.OUTCOUNT.IP.ACTIVE = '1'
                  END
               else
                  OUTREC.OUTCOUNT.IP.ACTIVE = '0'
               OUTREC.OUTCOUNT.ip = SUBSTR(CHGFILE,1,72)
               LASTINSERT = IP
               ip = ip + 1
               END
         when ffunction = 'DELETE-REPLACE' THEN
            call delete_process
         when ffunction = 'DELETE' THEN do
            OUTREC.OUTCOUNT = SUBSTR(CHGFILE,1,72)
            outcount = outcount + 1
            end
         when ffunction = 'MERGE' THEN DO
            OUTREC.OUTCOUNT = SUBSTR(CHGFILE,1,72)
            OUTCOUNT = OUTCOUNT + 1
            END
         otherwise nop
         end
      end
   end
CALL ALERT FUSIO024
CALL ALERT FUSIO025
CALL UNSPOOL
"EXECIO * DISKW REPDD (STEM OUTFILE. FINIS"
RETURN

unspool:
I1 = 1
DO I = 1 TO OUTCOUNT - 1
   X = 1
   DO while SUBSTR(OUTREC.I.X,1,6) \ = 'OUTREC'
      ACTIVE_LINE = OUTREC.I.X.ACTIVE
      IF ACTIVE_LINE <> '1' THEN ACTIVE_LINE = 0
      IF ACTIVE_LINE THEN DO
         OUTFILE.I1 = OUTREC.I.X
         I1 = I1 + 1
         CALL DEL_STEM
         END
      else
         CALL DEL_STEM
      X = X + 1
      END
      OUTFILE.I1 = OUTREC.I
      I1 = I1 + 1
   END
RETURN

del_stem:
LASTa = OUTREC.I.X.1
IF DATATYPE(LASTa) <> 'NUM' THEN LASTa = 1
DO LL = 2 TO LASTa
   OUTFILE.I1 = OUTREC.I.X.LL
   I1 = I1 + 1
   END
return

delete_process:
IF ACTIVE_REPLACE,
&  APPFUNC \ = 'MOVE' THEN do
   NR = SUBSTR(CHGFILE,7,72)
   NR = PROCESS_LISTA(NR)
   OCOMMENT = COMMENT
   IF SUBSTR(CHGFILE,8,64) = '' THEN NOP
   ELSE DO
      HOLDPENDING = J1
      FOUNDINSERT = 0
      DO J1 = HOLDPENDING TO LASTINSERT
         NEWREC = OUTREC.OUTCOUNT.J1
         ACTIVE_LINE = OUTREC.OUTCOUNT.J1.ACTIVE
         IF ACTIVE_LINE <> '1' THEN ACTIVE_LINE = 0
         COMPREC = PROCESS_LISTA(NEWREC)
         NCOMMENT = COMMENT
         IF FOUND_LINE(),
         & ((NCOMMENT & \ OCOMMENT),
         | (NCOMMENT & OCOMMENT)) THEN DO
            FOUNDINSERT = 1
            LEAVE
            END
         ELSE
            IF FOUND_LINE() THEN DO
               HIT_FIND = 'PROBABLE'
               FOUNDINSERT = 1
               END
         END
      IF FOUNDINSERT THEN
         IF HIT_FIND = 'EXACT' THEN NOP
         ELSE
            IF HIT_FIND = 'PROBABLE' THEN
               IF POS('DELCOM',PROCOPT) > 0 THEN NOP
               ELSE
                  CALL PROCESS_INSERT
            ELSE nop
      ELSE DO
         J1 = LASTINSERT
         HIT_FIND = 'ABSOLUTE'
         CALL PROCESS_INSERT
         J1 = HOLDPENDING
         END
      END
   END
ELSE DO
   J1 = 1
   CALL PROCESS_INSERT
   END
return

PROCESS_INSERT:
HJ1 = J1
IF TIBTYPE = 'COBOL' THEN CSTART = 7
ELSE CSTART = 1
LAST = OUTREC.OUTCOUNT.J1.1
IF DATATYPE(LAST) <> 'NUM' THEN LAST = 2
ELSE LAST = LAST + 1
OUTREC.OUTCOUNT.J1.1 = LAST
OUTREC.OUTCOUNT.J1.LAST = SUBSTR(CHGFILE,1,72)
J1 = HJ1
RETURN

FOUND_LINE:
FOUND = 0
hIT_FIND = ''
IF pos(nr, COMPREC) > 0,
& nr <> '',
&  ACTIVE_LINE then do
   INDEX_D = pos(nr, COMPREC)
   ABBREV_LINE = SUBSTR(COMPREC,INDEX_D,LENGTH(NR))
   IF ABBREV_LINE = NR THEN FOUND = 1
   HIT_FIND = 'EXACT'
   END
RETURN FOUND

PROCESS_LISTA:
ARG NEWREC
COMMENT = 0
IF TIBTYPE = 'COBOL' THEN
   COMPREC = SUBSTR(NEWREC,7,66)
ELSE
   COMPREC = SUBSTR(NEWREC,1,72)
IF SUBSTR(COMPREC,1,1) = '*' THEN DO
   COMMENT = 1
   COMPREC = COMPRESS(COMPREC)
   END
ELSE
   COMPREC = COMPRESS(COMPREC)
COMPREC = STRIP(COMPREC,'B')
RETURN COMPREC

SINUMP:
ARG REC
FOUND = 0
INITIAL = 0
IF APPFUNC = 'MASSMIG' THEN DO
   FOUND = 1
   RETURN FOUND
   END
IF APPFUNC <> 'MANSEL' THEN
   IF TIBTYPE = 'COBOL' THEN DO
      DO I = 1 TO MAXSI
         IF pos(sinum.i, SUBSTR(REC,1,12)) > 0 THEN DO
            FOUND = 1
            LEAVE
            END
         END
      IF \ FOUND & ACTIVE_REPLACE & REC = '' THEN FOUND = 1
      END
   ELSE
      DO I = 1 TO MAXSI
         IF pos(SINUM.I, rec) > 0 THEN DO
            FOUND = 1
            LEAVE
            END
         END
ELSE
   IF SUBSTR(REC,73,5) = 'EZSEL' THEN FOUND = 1
RETURN FOUND

COMPAREI:
DELETE "'"USER".SUPERC.UPDATE'"
DELETE "'"USER".SUPERC.LIST'"
"ALLOCATE DD(DELDD) DSN('"USER".SUPERC.UPDATE') SPACE (5000 1000)",
          "BLKSIZE(1600) RECFM(V,B) MOD"
INFILE. = ''
CHANGE_FILE. = ''
CHECK_MOD = USER || '.EZTOOLS.CNTL' || '(' || 'SYSIN' || ')'
IF SYSDSN("'"CHECK_MOD"'") <> "OK" THEN
   CALL SYSIN_CARD
"ALLOCATE DD(OUTDD) DUMMY"
"ALLOCATE DD(SYSIN) DSN('"USER".EZTOOLS.CNTL(SYSIN)') SHR REUSE"
"ISPEXEC SELECT PGM(ISRSUPC) PARM(LONGL LINECMP ",
                  "UPDLDEL,,' ')"
"FREE DD(SYSIN)"
RETURN

COMPAREA:
DELETE "'"USER".SUPERC.LISTA'"
"FREE DD (OUTDD, NEWDD, OLDDD, DELDD)"
"ALLOCATE DD(NEWDD) DSN('"DESTDSN"("DESTPROG")') SHR"
"ALLOCATE DD(OLDDD) DSN('"BASEDSN"("BASEPROG")') SHR"
"ALLOCATE DD(OUTDD) DSN('"USER".SUPERC.LISTA') SPACE (900 900),
    BLKSIZE(3325) MOD RECFM(F,B) LRECL(133) MOD REUSE"
"ALLOCATE DD(SYSIN) DSN('"USER".EZTOOLS.CNTL(SYSIN)') SHR REUSE"
"ISPEXEC SELECT PGM(ISRSUPC) PARM(CHNGL,LINECMP)"
"FREE DD (SYSIN)"
RETURN

COMPAREB:
ADDRESS TSO
DELETE "'"USER".SUPERC.LISTB'"
"FREE DD (OUTDD, DELDD, SYSIN, NEWDD, OLDDD)"
"ALLOCATE DD(NEWDD) DSN('"DESTDSN"("DESTPROG")') SHR"
"ALLOCATE DD(OLDDD) DSN('"TIBDSN"("TIBPROG")') SHR"
"ALLOCATE DD(OUTDD) DSN('"USER".SUPERC.LISTB') SPACE (900 90),
          BLKSIZE(1600) MOD"
"ALLOCATE DD(DELDD) DUMMY"
"ALLOCATE DD(SYSIN) DSN('"USER".EZTOOLS.CNTL(SYSIN)') SHR REUSE"
"ISPEXEC SELECT PGM(ISRSUPC) PARM(DELTAL,CHNGL,LINECMP)"
RETURN

COMPRESS: PROCEDURE
ARG REC, OPTION
NR = ''
REC = TRANSLATE(REC,' ','().')
NWORD = WORDS(REC)
START = 1
DO NREP = START TO NWORD
   IF WORD(REC,NREP) = 'F' THEN NR = NR || 'FILLER'
   ELSE
      NR = NR || WORD(REC,NREP)
   END
RETURN NR

ALERT:
ARG SHOWMSG
"ISPEXEC SETMSG MSG("SHOWMSG")"
"ISPEXEC CONTROL DISPLAY LOCK"
CALL MESSAGE
"ISPEXEC TBADD EZLIST"
"ISPEXEC TBTOP EZLIST"
"ISPEXEC TBDISPL EZLIST PANEL(FUSIONP)"
RETURN

MESSAGE:
TFUNC = ''
IF ZEDLMSG <> '' THEN TFUNC = ZEDLMSG
ELSE
   SELECT
      WHEN SHOWMSG = 'FUSIO013' THEN
         TFUNC = ' o EDITING FILE'
      WHEN SHOWMSG = 'FUSIO014' THEN
         TFUNC = ' o INITIATING COMPARISON A'
      WHEN SHOWMSG = 'FUSIO016' THEN
         TFUNC = ' o INITIATING COMPARISON B'
      WHEN SHOWMSG = 'FUSIO021' THEN
         TFUNC = ' o FUSION COMPARE'
      WHEN SHOWMSG = 'FUSIO022' THEN
         TFUNC = ' o READING DIFFERENCES FILE'
      WHEN SHOWMSG = 'FUSIO023' THEN
         TFUNC = ' o COMPARISON ANALYSIS'
      WHEN SHOWMSG = 'FUSIO024' THEN
         TFUNC = ' o MERGING RESULTS'
      WHEN SHOWMSG = 'FUSIO025' THEN
         TFUNC = ' o REWRITING FILE'
      OTHERWISE NOP
      END
RETURN

INDICATOR:
"ISPEXEC SETMSG MSG("SHOWMSG")"
"ISPEXEC CONTROL DISPLAY LOCK"
"ISPEXEC TBDISPL EZLIST PANEL(FUSIONP)"
RETURN

PRINTCOMP:
USERDSN = ""USER".SUPERC.LISTA"
CALL PRINTPAGE
RETURN

SYSIN_CARD:
"ALLOCATE DD(JOB6) DSN('"USER".EZTOOLS.CNTL("SYSIN")') SHR REUSE"
L. = ""
L.1 = "CMPCOLMN 1:72"
L.2 = "CMPCOLMO 1:72"
L.3 = ""
"EXECIO * DISKW "JOB6" (STEM L. FINIS"
"FREE DD(JOB6)"
RETURN

PRINTPAGE: PROCEDURE EXPOSE USER
ARG TNARR
USERX = USER || 'X'
"ISPEXEC VGET ZTEMPF"
"ISPEXEC FTOPEN TEMP"
"ISPEXEC FTINCL F2PRINT"
"ISPEXEC FTCLOSE"
"SUBMIT '"ZTEMPF"'"
RETURN

PANEL_CONTROL:
"ISPEXEC TBDISPL EZLIST PANEL(FUSIONP)"
XRC = RC
IF RC = 8 THEN ENDKEY = 1
"ISPEXEC TBCLOSE EZLIST"
"ISPEXEC TBCREATE EZLIST NAMES(TFUNC) NOWRITE"
RETURN

PANEL_CONTROLA:
"ISPEXEC TBCLOSE EZLIST"
"ISPEXEC TBCREATE EZLIST NAMES(TFUNC) NOWRITE"
"ISPEXEC TBDISPL EZLIST PANEL(FUSIONP)"
XRC = RC
IF RC = 8 THEN ENDKEY = 1
RETURN

CONFIGURATION:
IF SYSDSN("'"REGDSN"(FUSNCONf)'") \ = 'OK' THEN DO
   SAY 'CONFIGURATION NOT NOT FOUND'
   RETURN
   END
"ALLOCATE DD(SYSDD) DSN('"REGDSN"(FUSNCONf)') SHR REUSE"
"EXECIO * DISKR SYSDD (STEM CONFIGURE. FINIS"
"FREE DD(SYSDD)"
DO RR = 1 TO CONFIGURE.0
   INTERPRET ""CONFIGURE.RR""
   END
RETURN

LANGUAGE_TYPE:
IF GLOBAL_ERROR = '' & \ ENDKEY THEN DO
   CALL ALERT FUSIO012
   "ALLOCATE DD(TYPEDD) DSN('"BASEDSN"("BASEPROG")') SHR REUSE"
   EOF = 0
   "EXECIO 1 DISKR TYPEDD (FIFO"
   IF RC = 2 THEN EOF = 1
   ELSE PULL VER_RECORD
   TYPE_VERIFIED = 0
   DO WHILE \ (TYPE_VERIFIED | EOF)
      IF SUBSTR(VER_RECORD,7,1) <> '*',
      &  SUBSTR(VER_RECORD,1,1) <> '*' THEN
         IF (INDEX(VER_RECORD,'IDENTIFICATION') > 0,
         &  INDEX(VER_RECORD,'DIVISION') > 0),
         |  INDEX(VER_RECORD,' PIC ') > 0,
         |  INDEX(VER_RECORD,'MOVE') > 0,
         |  INDEX(VER_RECORD,'PERFORM') > 0,
         |  INDEX(VER_RECORD,'REDEFINES') > 0 THEN DO
            TIBTYPE = 'COBOL'
            TYPE_VERIFIED = 1
            END
         ELSE
            IF INDEX(VER_RECORD,'DFHMDF') > 0 THEN DO
               TIBTYPE = 'MAPS'
               TYPE_VERIFIED = 1
               END
            ELSE
               IF WORDPOS('PROC',VER_RECORD) > 0,
               |  INDEX(VER_RECORD,'MSGCLASS') > 0 THEN DO
                  TIBTYPE = 'JCL'
                  TYPE_VERIFIED = 1
                  END
               ELSE
                  IF INDEX(VER_RECORD,'CSECT') > 0,
                  |  INDEX(VER_RECORD,'DSECT') > 0,
                  |  INDEX(VER_RECORD,'PMSREGS') > 0,
                  |  INDEX(VER_RECORD,'NOGEN') > 0,
                  |  INDEX(VER_RECORD,'ORG') > 0 THEN DO
                     TIBTYPE = 'ASSEMBLER'
                     TYPE_VERIFIED = 1
                     END
                  ELSE
                     IF INDEX(VER_RECORD,'GENIF') > 0,
                     |  (INDEX(VER_RECORD,'HERE') > 0,
                     &  INDEX(VER_RECORD,'CALLED') > 0) THEN DO
                        TIBTYPE = 'GENEDIT'
                        TYPE_VERIFIED = 1
                        END
                     ELSE
                        IF INDEX(VER_RECORD,'AIDS') > 0 THEN DO
                           TIBTYPE = 'AIDS'
                           TYPE_VERIFIED = 1
                           END
         "EXECIO 1 DISKR TYPEDD (FIFO"
         IF RC = 2 THEN EOF = 1
         ELSE PULL VER_RECORD
         END
      IF \ TYPE_VERIFIED THEN TIBTYPE = 'UNKNOWN'
      "EXECIO 0 DISKR TYPEDD (FIFO FINIS"
      "FREE DD(TYPEDD)"
      ZEDLMSG = "DETECTED "TIBTYPE" LANGUAGE"
      CALL ALERT FUSIO010
      ZEDLMSG = ''
      END
RETURN
./ ENDUP
/*
//SBGOLOBA JOB 'INIT',MSGLEVEL=(0,0),MSGCLASS=X,REGION=2048K,CLASS=A
//* START JCL
//INIT    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=X
//*
//* MODIFY THE SYSUT2 DSN TO THE ONE USED FOR ISPF PANELS IN YOUR
//* ENVIRONMENT.
//*
//* IF RACF WILL ALLOW YOU TO ALLOCATE THE DEFAULT SYSUT2 DSN, THEN
//* IT IS RECOMMENDED THAT YOU KEEP THE DEFAULT VALUE.
//*
//*SYSUT2   DD DSN=WRK1.FUSION.ISPPLIB,DISP=(NEW,CATLG,DELETE),
//SYSUT2   DD DSN=SBGOLOB.FUSION.ISPPLIB,DISP=(NEW,CATLG,DELETE),
//         DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,DSORG=PO),
//         SPACE=(CYL,(1,1,5)),UNIT=SYSALLDA,VOL=SER=DATA01
//SYSIN    DD DATA
./ ADD NAME=FUSIONP,LIST=ALL
)ATTR
#  TYPE(TEXT) INTENS(LOW) COLOR(BLUE) SKIP(ON)
%  TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
\  TYPE(TEXT) INTENS(HIGH) COLOR(RED)
@  TYPE(OUTPUT) INTENS(HIGH) COLOR(RED)
(  TYPE(TEXT) INTENS(HIGH) COLOR(TURQUOISE)
$  TYPE(INPUT) INTENS(HIGH) COLOR(GREEN)
)  TYPE(OUTPUT) INTENS(HIGH) COLOR(RED)
_  TYPE(INPUT) INTENS(HIGH) COLOR(GREEN) HILITE(USCORE)
+  TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(BLUE)
!  TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(RED)
)BODY EXPAND(//) LMSG(MSGPOS)
+COMMAND%===!>$ZCMD
%
! / / \F%U S I O N / /
+
+BASE DSN%=============!>_BASEDSN                      #
+UPDATED DSN%==========!>_TIBDSN                       #
+DESTINATION DSN%======!>_DESTDSN                      #
+MODULE NAME%==========!>_PROGNAME                     #
+APPLICATION FUNCTION%=!>_APPFUNC                      #
+PROCESS OPTIONS%======!>_PROCOPT
+SYSTEM INQUIRY LIST%==!>_TIBAPPX
_TIBAPPY
@DIAG                          # @MSGPOS#
)MODEL
%)TFUNC
)INIT
.CURSOR = &CURPOS
&SCRO = DATA
&ZTDMARK = ' '
)REINIT
&S = ' '
)PROC
)END
./ ENDUP
/*
//SBGOLOBA JOB 'INIT',MSGLEVEL=(0,0),MSGCLASS=X,REGION=2048K,CLASS=A
//* START JCL
//INIT    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=X
//*
//* MODIFY THE SYSUT2 DSN TO THE ONE USED FOR SKELETAL JCL IN YOUR
//* ENVIRONMENT.
//*
//* IF RACF WILL ALLOW YOU TO ALLOCATE THE DEFAULT SYSUT2 DSN, THEN
//* IT IS RECOMMENDED THAT YOU KEEP THE DEFAULT VALUE.
//*
//*SYSUT2   DD DSN=WRK1.FUSION.ISPSLIB,DISP=(NEW,CATLG,DELETE),
//SYSUT2   DD DSN=SBGOLOB.FUSION.ISPSLIB,DISP=(NEW,CATLG,DELETE),
//         DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,DSORG=PO),
//         SPACE=(CYL,(1,1,5)),UNIT=SYSALLDA,VOL=SER=DATA01
//SYSIN    DD DATA
./ ADD NAME=F2PRINT,LIST=ALL
//&USERX  JOB 'PRINT',MSGLEVEL=(1,1),MSGCLASS=X,CLASS=F
//GENER    EXEC PGM=IEBGENER
//SYSUT1   DD   DSN=&USERDSN,DISP=SHR
//NH42     OUTPUT FORMDEF=A10112,PAGEDEF=W240F3,CHARS=GT24
//NV22     OUTPUT FORMDEF=A10111,PAGEDEF=W120C2,CHARS=GT20
//LLTR  OUTPUT FORMDEF=A10110,PAGEDEF=A06462,CHARS=GT10,FORMS=STD
//SYSUT2   DD SYSOUT=A,OUTPUT=*.LLTR,COPIES=1,
//           DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DUMMY
./ ENDUP
/*
//SBGOLOBA JOB 'INIT',MSGLEVEL=(0,0),MSGCLASS=X,REGION=2048K,CLASS=A
//* START JCL
//INIT    EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD SYSOUT=X
//*
//* MODIFY THE SYSUT2 DSN TO THE ONE USED FOR MESSAGES IN YOUR
//* ENVIRONMENT.
//*
//* IF RACF WILL ALLOW YOU TO ALLOCATE THE DEFAULT SYSUT2 DSN, THEN
//* IT IS RECOMMENDED THAT YOU KEEP THE DEFAULT VALUE.
//*
//*SYSUT2   DD DSN=WRK1.FUSION.ISPMLIB,DISP=(NEW,CATLG,DELETE),
//SYSUT2   DD DSN=SBGOLOB.FUSION.ISPMLIB,DISP=(NEW,CATLG,DELETE),
//         DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,DSORG=PO),
//         SPACE=(CYL,(1,1,5)),UNIT=SYSALLDA,VOL=SER=DATA01
//SYSIN    DD DATA
./ ADD NAME=FUSIO00,LIST=ALL
FUSIO000     .HELP=*  .ALARM=YES .TYPE=CRITICAL
'&ZEDLMSG'

FUSIO001      .HELP=*  .ALARM=NO .TYPE=CRITICAL
'THE LANGUAGE TYPE COULD NOT BE DETERMINED FOR THE DOCUMENT.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO002      .HELP=*  .ALARM=NO .TYPE=CRITICAL
'ENTER A VALID BASE DATA SET NAME.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO003      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'ENTER A VALID TIB DATA SET NAME.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO004      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'ENTER A VALID DESTINATION DATA SET NAME.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO005      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'THE BASE MODULE NAME DOES NOT EXIST.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO006      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'THE TIB MODULE NAME DOES NOT EXIST.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO007      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'ENTER A MODULE NAME.  ' +
'PRESS PF3 TO CONTINUE.'

FUSIO009      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'1 OR MORE SYSTEM INQUIRY NUMBERS EXCEEDS 6 CHARACTERS.  ' +
'PRESS PF3 TO CONTINUE.'

./ ADD NAME=FUSIO01,LIST=ALL
FUSIO010     .HELP=*  .ALARM=NO .TYPE=NOTIFY
'&ZEDLMSG'

FUSIO011      .HELP=*  .ALARM=YES .TYPE=CRITICAL
'THE LANGUAGE TYPE COULD NOT BE DETERMINED.  '
'PRESS PF3 TO CONTINUE.'

FUSIO012      .HELP=*  .ALARM=NO  .TYPE=NOTIFY
'INITIATING LANGUAGE DETECT'

FUSIO013      .HELP=*  .ALARM=NO  .TYPE=NOTIFY
'EDITING FILE'

FUSIO014      .HELP=*  .ALARM=NO  .TYPE=NOTIFY
'INITIATING COMPARISON A'

FUSIO016      .HELP=*  .ALARM=NO  .TYPE=NOTIFY
'INITIATING COMPARISON B'

./ ADD NAME=FUSIO02,LIST=ALL
FUSIO020     .HELP=*  .ALARM=YES .TYPE=NOTIFY
'MOVEPROD COMPARE'

FUSIO021      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'FUSION COMPARE'

FUSIO022      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'READING DIFFERENCES FILE'

FUSIO023      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'COMPARISON ANALYSIS'

FUSIO024      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'MERGING RESULTS'

FUSIO025      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'REWRITING FILE'

FUSIO026      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'UNDOCUMENTED CODE WAS DETECTED AT &LINE' +
'&ERRLIST..  EITHER CORRECT THE DOCUMENTATION OR ADD IT TO USELIB ' +
'WITH CHECKOUT.  PRESS PF3 TO CONTINUE.'

FUSIO027      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'PERFORMING USAGE LIBRARY VERIFICATION'

FUSIO028      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'THE VALID APPFUNC FUNCTIONS ARE MANSEL, MASSMIG, MIGRATE, AND MOVE'

FUSIO029      .HELP=*  .ALARM=YES .TYPE=NOTIFY
'THE VALID PROCOPT FUNCTIONS ARE DISPLAY, COMPAREA, COMPAREB, ' +
'PCOMPAREA, AND DELCOM'
./ ENDUP
/*
