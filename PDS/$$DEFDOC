
     Documentation and Definitions Connected with FUSION
     ------------- --- ----------- --------- ---- ------

BASE DSN is the data set containing production source.

UPDATED DSN is the data set containing the 3rd party vendor
software or the data set that holds tested changes.

DESTINATION DSN is the data set that will hold the result of the
FUSION operation.

MODULE NAME is the name of the module to be updated.   If the
name of the BASE and UPDATED modules are different then the name
of the BASE module and TIB module can be specified in MODULE
NAME, separated by a space.   The DESTINATION module name is then
referred to by the BASE module name. An alternate DESTINATION
name can be specified by adding a 3rd name to the MODULE NAME.

APPLICATION FUNCTION specifies the type of merge operation to be
performed.  Normally, it is MIGRATE.

There are four migration options available which control how code
is moved from one program version to another.  They are MIGRATE,
MOVE, MASSMIG,  and MANSEL.  They are user selected in the
APPLICATION FUNCTION field of the main FUSION screen.   See
figure

MIGRATE is used when 3rd party vendor software needs to be applied
to the base system or when a program fix involving concurrent
development needs to be moved to production.   When code is
applied to a module, the code should always be identified by a fix
number in columns 1 through 6 of a Cobol program and the first and
last fields of an ASSEMBLER program.  Obsolete code should be
commented out and identified with the fix number in columns 1-6 of
the Cobol module.  This provides FUSION a reference when updating
the Destination.  So, code that is intended to be deleted from the
customer copy is commented out and replaced with the new code.

MOVE will migrate program code without performing associated
deletes on obsolete code.   This is a true 'cut and paste'
operation.  The programmer is responsible for deleting the code.
This mode is useful when migrating code to a highly modified
member.

MASSMIG will merge all code changes from the old source to the
new source.  The function is similar to MOVE except that all code
found in the old version will be moved to the new version.  This
is useful when a customer needs to update their base system to
the latest release of the vendor system.  Once again, the user is
responsible for performing the associated deletes on obsolete
code

MANSEL allows user selected migration of code from one program
version to another.  The UPDATED copy is edited in an 82 byte
format, allowing the user to select lines of code by entering an
S in the first column.  This is useful when only a portion of a
program needs to be updated or if the desired code is not
identified by a fix number.

There are 5 PROCESS OPTIONS that control how Fusion handles the
merge results.  They are DISPLAY, COMPAREA, COMPAREB, PCOMPAREA,
and NORMALIZE.  The commands can be entered in PROCESS OPTIONS in
any order.

DISPLAY - Displays the destination module with the merge results.
It is recommended that this feature always be set.

COMPAREA - Performs a comparison between the updated DESTINATION
source and the BASE source and displays the results.   It is
recommended that this feature always be set.

COMPAREB - Performs a comparison between the updated DESTINATION
source and the UPDATED source.  The results of the compare are
displayed.  This feature is useful to verify if all selected
lines of code were merged into the DESTINATION source.  Ideally,
the selected lines should not appear in this comparison.

PCOMPAREA - Prints the results of the COMPRA comparison.

NORMALIZE - Normalizes numeric data when attempting to update a
highly modified source member.  This helps to prevent merge
problems that may occur in Working Storage.  This option should
normally not be used.

FUSION automatically determines the language of the program being
updated.   The current supported languages are COBOL and ASSEMBLER
formats.  The ASSEMBLER formats include macro and command level,
including online maps, Genedits and AIDS languages.

For result integrity, a two level comparison process is performed
after a Fusion merge request, if it is requested by the COMPAREA
command.  This compares the DESTINATION, or updated program, to
the BASE source program.  This allows inspection of the compare
process to insure that the lines of code were applied correctly.


